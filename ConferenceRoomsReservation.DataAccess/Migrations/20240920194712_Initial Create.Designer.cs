// <auto-generated />
using System;
using System.Collections.Generic;
using ConferenceRoomsReservation.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConferenceRoomsReservation.DataAccess.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20240920194712_Initial Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConferenceRoomsReservation.DataAccess.Entities.AddServiceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("AddServices", (string)null);
                });

            modelBuilder.Entity("ConferenceRoomsReservation.DataAccess.Entities.BookingEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConferenceRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.ComplexProperty<Dictionary<string, object>>("BookingTime", "ConferenceRoomsReservation.DataAccess.Entities.BookingEntity.BookingTime#BookingTime", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Day")
                                .HasColumnType("int")
                                .HasColumnName("Day");

                            b1.Property<int>("Hours")
                                .HasColumnType("int")
                                .HasColumnName("Hours");

                            b1.Property<int>("Minutes")
                                .HasColumnType("int")
                                .HasColumnName("Minutes");

                            b1.Property<int>("Month")
                                .HasColumnType("int")
                                .HasColumnName("Month");

                            b1.Property<int>("Year")
                                .HasColumnType("int")
                                .HasColumnName("Year");
                        });

                    b.HasKey("Id");

                    b.HasIndex("ConferenceRoomId");

                    b.ToTable("Bookings", (string)null);
                });

            modelBuilder.Entity("ConferenceRoomsReservation.DataAccess.Entities.ConferenceRoomEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BasePricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ConferenceRooms", (string)null);
                });

            modelBuilder.Entity("ConferenceRoomsReservation.DataAccess.Entities.AddServiceEntity", b =>
                {
                    b.HasOne("ConferenceRoomsReservation.DataAccess.Entities.ConferenceRoomEntity", null)
                        .WithMany("Services")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConferenceRoomsReservation.DataAccess.Entities.BookingEntity", b =>
                {
                    b.HasOne("ConferenceRoomsReservation.DataAccess.Entities.ConferenceRoomEntity", "ConferenceRoom")
                        .WithMany()
                        .HasForeignKey("ConferenceRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConferenceRoom");
                });

            modelBuilder.Entity("ConferenceRoomsReservation.DataAccess.Entities.ConferenceRoomEntity", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
